openapi: 3.0.2
info:
  title: API Documentation
  version: 1.0.0
tags:
  - name: Franchises
    description: Endpoints for create Franchises
paths:
  /franchises:
    post:
      tags:
        - Franchises
      summary: Register a Franchise
      description: Register a Franchise
      operationId: createFranchise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FranchiseRequest'
      responses:
        200:
          description: The franchise has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FranchiseResponse'
        400:
          description: Bad Request - If the resource is misspelled (badly constructed URI) If the data in the request is not correct.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /franchises/{idFranchise}/branch:
    post:
      tags:
        - Franchises
      summary: Register a branch
      description: Register a branch
      operationId: createBranch
      parameters:
        - name: idFranchise
          in: path
          required: true
          description: The franchise id associated with the branch
          schema:
            type: integer
            description: id the franchise
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchRequest'
      responses:
        200:
          description: The branch has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchResponse'
        400:
          description: Bad Request - If the resource is misspelled (badly constructed URI) If the data in the request is not correct.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /franchises/{nameBranch}/product:
    post:
      tags:
        - Franchises
      summary: Register a product
      description: Register a product
      operationId: createProduct
      parameters:
        - name: nameBranch
          in: path
          required: true
          description: The name Branch associated with the branch
          schema:
            type: string
            example: "cucuta"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        200:
          description: The product has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRequest'
        400:
          description: Bad Request - If the resource is misspelled (badly constructed URI) If the data in the request is not correct.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /franchises/{nameProduct}/product:
    put:
      tags:
        - Franchises
      summary: Update product quantity
      description: Update the quantity of a product
      operationId: updateProductQuantity
      parameters:
        - name: nameProduct
          in: path
          required: true
          description: The name of the product to update
          schema:
            type: string
            example: "colgate"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                total:
                  type: integer
                  description: The quantity of the product. Must be non-negative.
                  example: 100
                  minimum: 0
              required:
                - total
      responses:
        200:
          description: The product quantity was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductRequest'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        404:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      tags:
        - Franchises
      summary: Delete a product
      description: Delete a product
      operationId: deleteProduct
      parameters:
        - name: nameProduct
          in: path
          required: true
          description: The name Product
          schema:
            type: string
            example: "colgate"
      responses:
        200:
          description: Product deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        400:
          description: Bad Request - If the resource is misspelled (badly constructed URI) If the data in the request is not correct.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
components:
  schemas:
    # Properties
    name:
      type: string
      description: Name of the franchises
      example: McDonald's
    id:
      type: integer
      format: int64
      description: Unique franchise identifier
      example: 123
    # Objects
    ErrorObject:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          description: Error message (detailed description)
          example: Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).
      description: Error details
      example:
        message: Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).
    FranchiseRequest:
      required:
        - name
      type: object
      description: Data required to create a franchise
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/name'
    ProductRequest:
      required:
        - name
        - total
      type: object
      description: Data required to create product
      properties:
        name:
          $ref: '#/components/schemas/name'
        total:
          type: integer
          description: total of existing products
          format: int32
          example: 300
    FranchiseResponse:
      required:
        - name
        - idFranchise
      type: object
      description: Data required to create a franchise
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/name'
        idFranchise:
          $ref: '#/components/schemas/id'
    BranchRequest:
      type: object
      description: Represents a branch associated with the franchise
      properties:
        name:
          $ref: '#/components/schemas/name'
    ProductResponse:
      type: object
      description: Response when a product is deleted successfully
      properties:
        message:
          type: string
          example: "Product successfully removed"
    BranchResponse:
      type: object
      description: Represents a branch associated with the franchise
      properties:
        name:
          $ref: '#/components/schemas/name'